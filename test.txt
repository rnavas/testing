Requerimientos y Marketplace Prioritization

Como APICore depende del Markteplace los pedidos tienen que realizarse mediante la ticketera con anticipacion antes del comienzo de  todos los Q.  Cualquier pedido una vez comenzado el Q tiene que tener un alta prioridad (y bien justificado) ya que algo del backlog tendra que ser despriorizado. Para hacer una solicitud de un requerimiento deben cargarlo directamente desde esta url https://mercadolibre.atlassian.net/servicedesk/customer/portal/238/user/login?destination=portal%2F238

Bugs y Soporte Marketplace

Cualquier funcionamiento incorrecto que se encuentre en alguna de nuestras APIs se debe reportar a Jira via esta ticketera: https://mercadolibre.atlassian.net/servicedesk/customer/portal/97/user/login?destination=portal%2F97

Soporte de APICore

Para cualquier consulta o soporte que necesiten de APICore deben rellenar este formulario: https://docs.google.com/forms/d/e/1FAIpQLSdW00yY4OxkEb0La8WwccyROX4Yu08yBJaEqkqVnNt38uRf2Q/viewform


Documentacion Adicional de Apicore

Conoce todos nuestros terminos y expresiones visitando este glosario: https://sites.google.com/mercadolibre.com/apicore/glosario
Te compartimos nuestro conocimiento y experiencias utilizando diferentes servicios y herramientas que podras ver en estos articulos: https://sites.google.com/mercadolibre.com/apicore/art%C3%ADculos
Visita esta seccion para conocer un poco mas de nuestras APIs para poder ver nuestras charlas: https://sites.google.com/mercadolibre.com/apicore/charlas


¿Que es Feedback?

Representa las calificaciones de las contrapartes en una venta. Es una opinion sobre la operacion hacia el vendedor/comprador. No confundir con una opinion sobre el producto (conocido como review). A su vez una calificacion puede contestarse (entidad conocida como Reply) o bien solicitar que se cambie (entidad conocida como Change Request). A partir del momento en que un usuario hace una venta, ambas partes ya pueden dejar su feedback sobre la transaccion. El vendedor al calificar al comprador como positivo, esta indicando que ya entrego el producto; es importante recordar que este proceso recien debe realizarse cuando se tenga seguridad de que el producto fue entregado al comprador. 


Link de la api de feedback en Fury: https://web.furycloud.io/feedback-api/summary
Link de la api de feedback en Github: https://github.com/mercadolibre/fury_feedback-api
Link de la api de feedback en Datadog: https://app.datadoghq.com/dashboard/4z7-m2y-kug

¿Cuando se puede calificar una venta (orden)?
La orden debe estar visible y no debe tener un pago en proceso. Tampoco se puede calificar una orden que tiene mas de 60 dias desde que se cerro la orden.

¿Que significa el campo fulfilled?
Es lo que indica el usuario (comprador o vendedor) respecto a si la operacion se concreto o no.

¿Que significa el campo rating?
Es lo que indica el usuario (buyer or seller) respecto a si la experiencia fue buena (positive), neutral o mala (negative).

¿Que significa el campo reason?
Es lo que indica el usuario (buyer or seller) respecto al motivo por el cual la operacion no se concreto. Es un campo obligatorio cuando el seller califica como no concretado (fulfilled: false).

¿Que plazo hay para calificar?
Tiene 60 dias a partir de la fecha de visibilidad de la orden (order.date_closed) para todos los sitios. En caso de tratarse de una venta de un producto que requiere manufacturacion seran 60 dias a partir de la fecha de terminado de facturacion (order.manufacturing_ending_date). Algunas consideraciones: No se podra calificar negativo despues de la fecha de expiracion a menos que sea el buyer y exista una mediacion cerrada. Las ordenes de CBT tienen un plazo de 100 dias para calificar debido a los extraordinarios tiempos de entrega que suelen tener los envios internacionales.

¿Cuanto tiempo tiene un usuario para cambiar su calificacion?
Tiene 90 dias a partir de la creacion del feedback. Algunas consideraciones: No se podra modificar un feedback inactivo.

¿Cuando se hace visible una calificacion?
Cuando califican ambas partes. Cuando la orden expira. Cuando la orden se cancela. Cuando quien recibe el feedback tiene mas del 10% de calificaciones negativas.

¿Cuantas veces puedo modificar un feedback?
El campo fulfilled o rating solo se podran modificar una vez. Nota: Si el feedback esta no concretado (fulfilled = false) se puede modificar siempre.

¿Cuando se puede responder una calificacion?
Un usuario podra responder a un calificacion que le hicieron siempre y cuando este visible.

¿Cuando se puede solicitar un cambio de calificacion?
Un usuario que recibio una calificacion podra crear un pedido de cambio de calificacion mientras la contraparte este dentro de la fecha para poder modificarlo. La contraparte podra aceptar el pedido y hacer el cambio o podra rechazarlo (y no se modificara la calificacion). En caso de que la contraparte no conteste al pedido durante el plazo de 5 dias su calificacion se inactivara. Esto se refleja en el bloque change_request del feedback.

¿Afectan estas calificaciones a la nueva reputacion?
No afectan a la nueva reputacion. 

¿Se puede hacer una calificacion sobre una compra de carrito?
El feedback no pude hacerse sobre un purchase o un pack, pero a nivel API se puede hacer calificaciones sobre cada una de las ordenes que se crearon a partir del purchase.

¿Que pasa si califico no concretado (fulfilled false)?
Si la calificacion es del seller se procede a hacer la devolucion de los pagos de la orden y se pausara el item si se cumplen 2 condiciones: es de Argentina, Brasil, Chile, Colombia, Mexico o Uruguay. La orden no es de proximity o el reason es uno de los siguientes: OUT_OF_STOCK, UNAVAILABLE_PRODUCT, UNAVAILABLE_PRODUCT_OTHER, MANUFACTURING_PRODUCT_NOT_FINISHED. Aclaracion: No se podra calificar como NO concretado un feedback por parte del buyer si este es del flujo lite, es decir, la compra realizada mediante un user guest.

¿Cuales son las reasons posibles?

Razon: DUBIOUS_BUYER Descripcion: El comprador no es confiable Rol: seller
Razon: HIGH_ML_COMISSION Descripcion: El costo por venta es demasiado alto Rol: seller
Razon: HIGH_TAXES Descripcion: Los impuestos son demasiado altos Rol: seller
Razon: SELLER_HOLIDAY Descripcion: No estoy operando por vacaciones Rol: seller
Razon: SELLER_OTHER Descripcion: Otros motivos Rol: seller
Razon: UNAVAILABLE_PRODUCT Descripcion: No vendo el producto que pide el comprador Rol: seller
Razon: UNAVAILABLE_PRODUCT_OTHER Descripcion: No tengo el producto (por otros motivos) Rol: seller
Razon: BUYER_NOT_ENOUGH_MONEY Descripcion: El comprador no tiene suficiente dinero Rol: seller
Razon: BUYER_DID_NOT_ANSWER Descripcion: El comprador no respondio el contacto del vendedor Rol: seller
Razon: MANUFACTURING_PRODUCT_NOT_FINISHED Descripcion: No termine la fabricacion del producto Rol: seller
Razon: SELLER_REGRETS Descripcion: Me arrepenti de la venta Rol: seller
Razon: UNFRIENDLY_SHIPMENT_POLICY Descripcion: El comprador no esta de acuerdo con el envio Rol: seller
Razon: SELLER_ADDRESS_WITHDRAWAL Descripcion: El comprador prefiere retirar personalmente Rol: seller
Razon: WRONG_RECEIVER_ADDRESS Descripcion: El comprador tiene mal la direccion de envio Rol: seller
Razon: WRONG_SHIPMENT_COST Descripcion: El costo de envio estaba mal calculado Rol: seller
Razon: UNPRINTED_LABEL Descripcion: No pude imprimir la etiqueta Rol: seller
Razon: SHIPMENT_PROBLEM_OTHER Descripcion: Shipping tuvo algun otro problema Rol: seller
Razon: UNWITHDRAWN_PRODUCT_BY_DELIVER_COMPANY Descripcion: El correo no paso a retirar el producto Rol: seller
Razon: DENIED_PACKAGE Descripcion: El correo no acepto el paquete por sus dimensiones o peso Rol: seller
Razon: DELIVERY_COMPANY_PROBLEM_OTHER Descripcion: El correo tuvo otro problema Rol: seller
Razon: UNABLE_TO_READ_LABEL Descripcion: El correo no puede leer la etiqueta Rol: seller
Razon: BUYER_OTHER Descripcion: Otras razones Rol: seller
Razon: BUYER_PAID_BUT_DID_NOT_RECEIVE Descripcion: El comprador pago pero no recibio el producto Rol: buyer
Razon: DESCRIPTION_DIDNT_MATCH_ARTICLE Descripcion: El comprador dice que la descripcion no coincide con el producto Rol: buyer
Razon: SELLER_DID_NOT_ANSWER Descripcion: El vendedor no respondio al comprador Rol: buyer
Razon: OUT_OF_STOCK Descripcion: No tengo stock Rol: both
Razon: BUYER_REGRETS Descripcion: El comprador se arrepintio de la compra Rol: both
Razon: HIGH_SHIPMENT_COST Descripcion: Los costos de envio son demasiado altos Rol: both
Razon: OTHER_MY_RESPONSIBILITY Descripcion: Mi responsabilidad (Otra razon) Rol: both
Razon: OTHER_THEIR_RESPONSIBILITY Descripcion: Responsabilidad de la contraparte (Otra razon) Rol: both
Razon: THEY_NOT_HONORING_POLICIES Descripcion: No se cumplieron las politicas Rol: both
Razon: TOO_MANY_ORDERS Descripcion: Se juntaron demasiados pedidos Rol: seller
Razon: CLOSED_STORE Descripcion: La tienda esta cerrada Rol: seller
Razon: OUT_OF_DELIVERY_AREA Descripcion: Fuera del area de cobertura de envio Rol: seller
Razon: DELIVERY_PERSON_PROBLEM Descripcion: Problema con el repartidor Rol: seller

Lectura
Feedback por id

/feedbacks/feedback_id?caller.id=caller&client.id=client

Feedback por order id

/orders/order_id/feedback?caller.id=caller&client.id=client

Feedback por role

/orders/order_id/feedback/$role?caller.id=caller&client.id=client

Historia del feedback

/feedbacks/feedback_id/history?caller.id=caller&client.id=client

Novedades
Topico
eaa781a304904b9cbbc361bf2a63820c-feedback-public

Buscar
Buscar

/feedbacks/search?client.id=client&to=user_id&exclude_context_flows=flow1,flow2

Contar

/feedbacks/search/count?client.id=client&to=user_id

Barrido (scan)

/feedbacks/search?client.id=client&to=user_id&search_type=scan

ABM de Feedback
Crear

/orders/order_id/feedback?caller.id=caller&client.id=client

Editar por id

/feedbacks/feedback_id?caller.id=caller&client.id=client

Editar por order id

/orders/order_id/feedback/$role?caller.id=buyer&client.id=client

Editar estado

/feedbacks/feedback_id/status?caller.id=caller&client.id=client

ABM de Reply
Puede responder a las calificaciones que haya recibido de sus contrapartes para explicar sus razones o para proporcionar informacion adicional.

Crear 

/feedback/feedback_id/reply?caller.id=caller&client.id=client

Editar 

/feedback/feedback_id/reply?caller.id=caller&client.id=client

ABM de Change Request
Puede solicitar un cambio de calificacion que haya recibido de sus contrapartes.

Crear 

/feedbacks/feedback_id/change_request?caller.id=caller&client.id=client

Editar el estado

/feedbacks/feedback_id/change_request?caller.id=caller&client.id=client

Extender el plazo 

/feedbacks/feedback_id/change_request/extend_time?caller.id=caller&client.id=client

Dias para calificar
Leer

/feedbacks/days_to_qualify?client.id=client&....

Buscar

/feedbacks/days_to_qualify/by_seller?client.id=client&....

Crear

/feedbacks/days_to_qualify/by_seller?client.id=client

Desactivar

/feedbacks/days_to_qualify/by_seller?client.id=client&....

Testing
Scopes de tests
https://api.mercadolibre.com/feedback/$id?caller.id=$caller_id&client.id=$app_id&scope=test3


¿Que es Order?
Representa la compra de un item-variacion en el marketplace. Siempre la orden es de un solo item, pero pueden ser multiples unidades del mismo.

Decimos item-variacion porque la compra siempre es sobre la variacion del item, y si este no posee sera sobre el item mismo. 

No representa una compra por mercadopago (aka merchant_orders)

Los pagos que conocen la orden son solo del tipo "marketplace_order"

Para representar dicha compra la orden agrupa informacion de diferentes APIs:

Shipping

Feedbacks

Mediations

Payments

Users

Vault (para externos)

Ademas centraliza la logica sobre como procesar pagos en la compra.

Participa principalmente en el flujo de venta y post-venta, trabajando muy de cerca con el equipo de Checkout y MyML.

Ademas es una API publica con lo cual existen muchas integraciones externas a Meli que la utilizan, para ello trabajamos cerca del equipo de OpenPlatform.

¿Cuales son los estados de la orden?

1) Las ordenes que entran por el flujo "Buy equals pay" se crean en estado “payment_required”.

En ese momento tienen las siguientes caracteristicas:

No son visibles para el seller.

No se descuenta el stock de item.

No tienen establecido el campo date_closed.

No tienen datos de la contraparte.

Cuando el o los pagos se acreditan por el monto total de la venta, la orden pasa del estado “payment_required” a “paid”. En ese momento:

Se hacen visibles para el seller.

Se descuenta el stock del item.

Se establece el campo date_closed.

Se agregan los datos de la contraparte.

Comienzan a enviarse ademas las notificaciones del topic “orders”.

Si todos los pagos se devuelven, la orden se cancela.


2) Las ordenes que NO entran por este flujo se crean en estado “confirmed”. Desde ese momento:

Son visibles para el seller.

Se descuenta el stock de item.

Se establece el campo date_closed.

Tiene los datos de la contraparte.

Comienzan a enviarse ademas las notificaciones del topic “orders”/”created_orders”.

En caso de que se termine efectuando pagos a traves de Mercado Pago y sean acreditados por el monto total de la venta, la orden pasa del estado “confirmed” a “paid”.

¿Cuando esta paga una orden?
Cuando hay dinero!!


paid_amount >= total_amount(1) + shipping_cost(2) + taxes.amount (3)

(1) precio del item * quantity, en la moneda de la orden.
(2) costo del envio, en la moneda de la orden.
(3) impuestos, en la moneda indicada en taxes.currency_id 

Paid amount

Es el dinero que comprador pago

La orden considera los pagos en estos estados:

approved

in_mediation

charge_back: si solo si el status_detail es in_process o reimbursed

Y para cada uno suma los campos:

transaction_amount

taxes_amount

shipping_cost

Shipping Cost

El envio puede tener una moneda diferente a la orden, por eso su costo debe ser multiplicado por el ratio que corresponda a la fecha de creacion del mismo.

Taxes amount

La orden persiste localmente el total de impuestos que el comprador debe pagar y la moneda del mismo.

Cupones

Si hay algun cupon, su monto debe estar incluido en el campo del pago transaction_amount

Diferentes monedas

El monto total es multiplicado por ratio de conversion a la fecha creacion del pago (dato interno de la orden).

El ratio se recupera de: 

/currency_conversions/search?from=currency1&to=currency2&date=dd/MM/yyyy-HH:mm&complete=true

La marca 'complete' hace que retorne todos los decimales.

¿Cuando es visible una orden? / ¿Cuando se reduce el stock del item? / ¿En que momento se determina el date_closed?
Las ordenes del tipo buy_equals_pay se crean con el campo hidden_for_seller en true el cual determina cuando un vendedor puede ver la orden. Las ordenes buy_it_now ya se crean con el campo en false.

Una vez que es visible no puede ocultarse, es decir que la marca nunca vuelve a true.

Las ordenes se hacen visible cuando se descuenta el stock al item. Para las ordenes buy_it_now es el momento en que se crea la compra, y para las buy_equals_pay cuando se paga.

Ademas se guarda la fecha en el atributo date_closed la misma representa el momento en que la orden es visible.

Junto con esta fecha tambien se define el campo expiration_date que es el date_closed + cantidad de dias que define feedback en base al sitio, el producto, el vendedor y otras variables. Ademas se le suma los dias de manufactura (o preparacion) si es que el item lo tenia configurado al momento de la creacion de la orden.

El expiration_date siempre sera mayor al date_closed. En esta fecha se analizara si la orden se concreto (ver siguiente pregunta para mas detalles).


¿Como identifico una orden de test?
Las ordenes de test tienen el tag "test_order".


¿Puede una orden estar asociada a un item que ya no existe?
Si. Los items tienen una duracion determinada, cuentan con un proceso de limpieza para aquellos que no tengan actividad. En cambio, las ordenes se guardan para siempre, con lo cual es un caso de uso valido que existan compras cuyo item fue purgado (por ejemplo, la orden con ID 1).

Podes encontrar mas informacion acerca de la duracion de los items en la siguiente FAQ.

¿Cuanto tiempo hay para pagar una orden?
Las ordenes en estado 'payment_required' tienen 20 dias desde su fecha de creacion para ser pagadas, pasado dicho plazo se cancelaran por expiracion. Durante el mismo plazo se respeta el precio por el cual fue creada.

Dicho limite aplica para todos los paises.

¿Puede crearse una orden si el item esta pausado?
Solo se puede si se trata de una orden que se genera a traves de un split de packs, proceso interno disparado por fullfilment o el seller cuando determinan que los items involucrados en una Purchase no pueden ser distribuidos en los Packs asignados por el calculador. En este proceso se generan nuevos Packs con la nueva distribucion de los items, y se crean nuevas ordenes para cada uno de ellos. Esta vez, al tratarse de una orden proveniente de un split de Pack, no validamos el estado del item ni su stock, ya que se trata de Items validados anteriormente.

¿Cuando una orden esta concretada?
El campo fulfilled indica si la compra esta concretada o no.

Siempre se crea con el valor en null, lo que se puede interpretar como que aun no se evaluo.

Una vez que ocurra alguno de los siguiente eventos tendra true o false. Y podra cambiar N veces.

Los factores, ordenados por prioridad, son los siguientes:

Si la orden se cancela se marca como no concretada y nada lo puede modificar.

Si la orden tiene el tag unfulfilled se marca como no concretada.

Si hay un feedback del vendedor se revisa el fulfilled del feedback y se marca como concretada o no concretada segun corresponda.  

Si la orden es una reserva (ver los tags) y no hay feedback del vendedor se cancela todo, aunque este paga. Luego se marca como no concretada.

Si hay un envio se revisa su estado (entregado o no) y se marca como concretada o no concretada segun corresponda.

Si no hay feedback, ni envio, pero la orden expiro:

Si esta 'paid' o 'confirmed' se marca como concretada.

Caso contrario se asume no concretada.


¿Cuando una orden esta cancelada?
Una orden esta cancelada cuando tiene el estado cancelled. Este es un estado final. 

Se puede obtener el detalle de la cancelacion desde el nodo cancel_detail. Alli se podra obtener informacion del motivo de cancelacion, el app_id solicitante y la fecha en la que se realizo.

Para cancelar una orden es necesario que no tenga pagos acreditados.

Si una orden esta cancelada entonces la misma no esta concretada, tal como lo refleja el atributo fulfilled. Pero no necesariamente ocurre al reves, pueden existir ordenes que no estan concretadas y no estan canceladas.

¿Por que una orden esta pending_cancel?
Una orden esta en estado pending_cancel cuando se encuentra en proceso de cancelarse. Esto se debe a que el o los pagos estan en proceso de ser devueltos(es decir hubo un intento de refund). Una vez que todos sus pagos fueron efectivamente devueltos la orden transiciona al estado cancelled.

En caso de que falle el intento del refund de alguno de los pagos se queda reintentando hasta que prospere la devolucion. 

¿Cuales son las causas de cancelacion?
Relacionadas a mediations

mediations: mediations cancelo la orden

Relacionadas a fiscal

fiscal: la orden fue cancelada por un problema fiscal

fiscal_seller_forbidden: El vendedor tiene prohibido emitir notas por SEFAZ

fiscal_invalid_buyer_ie: El IE (Inscripcion Estadual) del comprador no fue informado, no registrado, no activo en el estado, invalido o no relacionado con el CNPJ informado

fiscal_no_fiscal_stock: Aplicable solo a Full. Falta cobertura fiscal y por alguna razon el producto estaba disponible para venta/transferencia/devolucion.

fiscal_buyer_forbidden: SEFAZ nego al comprador emitir factura por irregularidades fiscales

fiscal_invoice_referenced_have_other_cnpj: El CNPJ de la factura referenciada no coincide con el CNPJ de la factura actual

fiscal_pending_integration: Puede ocurrir por muchas razones, la principal es cuando existe un carrito V3 donde se cancela un pedido y los demas pedidos autorizados quedan en integracion pendiente por pedido cancelado.

fiscal_invalid_recipient_name: El nombre del destinatario no coincide con el registro de la SEFAZ y no se autoriza la factura.

fiscal_sefaz_issuer_cnpj_not_enabled: CNPJ no habilitado en SEFAZ

fiscal_sefaz_tax_system_divergence: El sistema de impuestos del vendedor difiere de los registros de la SEFAZ

fiscal_items_with_invalid_ncm: Algunos articulos tienen un NCM no valido

fiscal_seller_invalid_ie_substitute: Impuesto Sustituto Invalido IE (IEST)

Relacionadas al comprador

buyer_repentant: el comprador se arrepintio

feedback_buyer_repentant: existe un feedback del vendedor con el reason buyer_regrets

feedback_buyer_dubious: existe un feedback del vendedor con el reason dubious_buyer

feedback_buyer_other: existe un feedback del vendedor con el reason other_their_responsibility

feedback_buyer_not_enough_money: existe un feedback del vendedor con el reason buyer_not_enough_money

feedback_buyer_address_withdrawal: existe un feedback del vendedor con el reason seller_address_withdrawal

buyer_cancel_express: existe una mediacion con el estado cancel_purchase

Relacionadas a fraude

fraud: existe un tag de fraud en la orden

fraud_money_control: existe un tag de fraud_money_control en la orden

fraud_seller: fraude del seller

fraud_buyer: fraude del buyer

fraud_ato: fraude desde cuenta hackeada/robada.

fraud_auto_offer: fraude cuando el buyer y el seller son la misma persona.

fraud_label: indica que la causa de cancelacion es "fraude etiqueta" para diferenciar las experiencias ante una cancelacion

Relacionadas al item

item_status_closed: el item esta cerrado, porque no esta activo, expiro o cerro

item_status_pending: el item esta pausado

item_out_of_stock: no hay stock para el item

item_variation_out_of_stock: no hay stock de la variacion del item

item_variation_unavailable: se indico en la creacion una variacion que no existe

item_variation_needed: el item tiene variaciones y no se indico una en la creacion

item_variation_nonexistent: se indico una variacion del item que no existe

Relacionadas al envio

shipment_creation: fallo la creacion del envio

shipment_unfulfilled: shipping (fulfillment) cancelo la orden

shipment_service_unavailable: baja cobertura del envio en origen/destino

shipment_agency_unavailable: la agencia de destino del envio se encuentra inactiva

feedback_shipment_high_cost: existe un feedback del vendedor con el reason high_shipment_cost

feedback_shipment_wrong_cost: existe un feedback del vendedor con el reason wrong_shipment_cost

feedback_shipment_unprinted_label: existe un feedback del vendedor con el reason unprinted_label

feedback_shipment_other: existe un feedback del vendedor con el reason shipment_problem_other

feedback_shipment_policy: existe un feedback del vendedor con el reason unfriendly_shipment_policy

feedback_shipment_wrong_address: existe un feedback del vendedor con el reason wrong_receiver_address

shipment_pack: hubo un problema con el envio en una orden de carrito

Relacionadas a la entrega

feedback_delivery_unwithdrawn: existe un feedback del vendedor con el reason unwithdrawn_product_by_deliver_company

feedback_delivery_bad_label: existe un feedback del vendedor con el reason unable_to_read_label

feedback_delivery_denied: existe un feedback del vendedor con el reason denied_package

feedback_delivery_other: existe un feedback del vendedor con el reason delivery_company_problem_other

Relacionadas al vendedor

seller_blocked: el vendedor no acepta ordenes (el campo del user status.sell.allow es falso)

seller_inactive: el vendedor no esta activo (el campo del user status no es active)

seller_timeout_proximity: el vendedor no respondio al pedido de proximidad.

seller_request_commercial_issues: el vendedor solito a Meli que cancele la venta por temas comerciales.

feedback_high_comission: existe un feedback del vendedor con el reason high_ml_comission

feedback_high_taxes: existe un feedback del vendedor con el reason high_taxes

feedback_seller_holiday: existe un feedback del vendedor con el reason seller_holiday

feedback_unavailable_product: existe un feedback del vendedor con el reason unavailable_product_child o unavailable_product_other

feedback_out_of_stock: existe un feedback del vendedor con el reason out_of_stock

feedback_did_not_try_contact: existe un feedback del vendedor con el reason seller_didnt_try_to_contact_buyer

feedback_other_my_responsibility: existe un feedback del vendedor con el reason other_my_responsibility

feedback_not_honoring_policies: existe un feedback del vendedor con el reason they_not_honoring_policies

feedback_product_not_finished: existe un feedback del vendedor con el reason manufacturing_product_not_finished

feedback_seller_repentant: existe un feedback del vendedor con el reason seller_regrets o repentant_seller_other o seller_other

feedback_too_many_orders : existe un feedback del vendedor con el reason too_many_orders

feedback_closed_store : existe un feedback del vendedor con el reason closed_store

feedback_out_of_delivery_area : existe un feedback del vendedor con el reason out_of_delivery_area

feedback_delivery_person_problem : existe un feedback del vendedor con el reason delivery_person_problem

Procesos internos

expired_order: se cancelo la orden porque no se pago antes del plazo maximo de 20 dias

expired_high_concurrency_order: se cancelo porque no se pago antes del plazo de expiracion para los items con tag livestream_elegible (entre 1 y 10 minutos aproximadamente) de alta demanda

pack_creation_error: hubo un error al crear el pack en una orden de carrito

pack_unknown: no se puede determinar el motivo de cancelacion sobre el pack de una orden de carrito

bug: la orden fue cancelada por un bug asociado a la misma

unknown: no se puede determinar el motivo de cancelacion

payments_capture_fail: no se pudo capturar los pagos de la orden ya que la misma dio el error 1101

pack_splitted: la orden de carrito fue cancelada debido a que la compra fue dividida

feedback_unknown: existe un feedback del vendedor asociado a la orden, del cual no se puede determinar una reason

Listado completo de causas

Si se devuelve el pago, se cancela la orden?
Si es de tipo buy_equals_pay solo se auto-cancela si la misma estaba visible. Esto implica que la compra estaba pagada, entonces si se devuelve el pago es que la compra no prospero.

Si la orden es del tipo buy_it_now tambien se cancelara, por lo que no podra volver a ser pagada.


¿Se incrementa el stock al cancelarse una orden?
Cuando una orden se cancela se realiza un incremento del stock del item pero deben cumplirse las siguiente condiciones:

La orden tiene que estar visible, o sea ya, desconto stock antes.

No pasaron 30 dias desde la expiracion de la orden.

La orden la cancela el comprador (causas buyer_cancel_express o buyer_repentant).

La orden NO se cancela por shipment_unfulfilled. Esta causa representa que hubo un problema con el stock del centro de fulfilment y no puede concretar la venta, ni reponer el stock.

Ninguno de los pagos se devuelve via Buyer Protection Program. Si se aplica BPP es muy dificil determinar con la data que paso en realidad. Dado que la mayoria de las veces pasa algo con el producto se opta por no reponer el stock.

No haya un feedback del vendedor con los reasons unavailable_product_other o out_of_stock. Aqui el mismo usuario nos dice que no pudo concretar la venta por falta de stock con lo cual no tiene sentido reponerlo.

En cualquier caso si al intentar modificar el stock recibe un 400, 403 o 404 de items-api no se reintenta.

¿Por que se cancelo un pago?
Cada vez que desde orders se invoca a cancelar un pago, se le pasa a payments la razon para que la persista en la metadata del mismo.

Documentacion de mercadopago

¿Por que una orden es 'buy equals pay' (B=P)?
Este es la logica hoy en dia:

La compra tiene una garantia

El comprador NO tiene el tag interno government_buyer

El item no de Meli-Live (el item tiene el tag live) 

El vendedor tiene la marca que necesita pago inmediato. Lo recupera del json del user en user.status.immediate_payment o status.sell.immediate_payment.required. En la orden status_detail.status_code sera seller_restriction

El comprador tiene la marca que necesita pago inmediato. Lo recupera del json del user en user.status.buy.immediate_payment.required. En la orden status_detail.status_code sera buyer_restriction

El item esta marcado que necesita pago inmediato. Lo recupera del json  item.tags.contains('immediate_payment'). En la orden status_detail.status_code sera item_price_restriction

La orden fue creada por purchases-api, por lo cual pertenece a un pack de un purchase.

Otro motivo en los sitios donde hay Mercado Pago se puede generar una orden B=P si el usuario supero el limite definidos en los umbrales de compra


¿Como se procesan las novedades de los pagos?

¿Como es el flujo en envios diferidos?
Es un flujo de contencion cuando hay problemas para crear envios online.



¿Como son los flujos de multiples pagos?

¿Como es la relacion con las otras entidades?

¿Cual es la tabla de Teradata?
En Teradata se encuentran las siguientes tablas relacionadas a la entidad Orders:


WHOWNER.BT_ODR_PURCHASE_ORDERS

WHOWNER.BT_ODR_ORDER_ITEMS

WHOWNER.LK_ORD_ORDER_TAG


Si necesitas sumar informacion o tenes alguna consulta podes enviar mail a bi@mercadolibre.com.

¿Como distingo una orden directa de una orden de carrito?
Una orden es de carrito si tiene un pack_id. El packId se puede obtener leyendo la orden y tambien esta incluido en la novedad de la misma.

¿Puede una orden estar en estado "paid" y tener un envio cancelado?
El estado de las ordenes depende de sus pagos, las ordenes contemplan compras realizadas que no tengan envio, por lo tanto su estado no depende del envio. Si un envio se cancela, es responsabilidad de shipping realizar la cancelacion de la orden, no de la orden en si.

¿Como es la relacion de la informacion de users y billing info?
La billing info es un dato con que se crea la compra que informa el Checkout, el cual recupera la informacion de recursos de Seller Invoices. 

A nivel API no hay control de donde proviene ni relacion con alguna otra entidad.

Lecturas
Leer Orden

/orders/$order_id

Leer ordenes (bulk)

/orders/bulk/read

Leer descuentos

/orders/$order_id/discounts

Leer billing info

/orders/$order_id/billing_info

Leer product info

/orders/$id/product

Novedades
Desde orders mantenemos 2 tipos de novedades:

BigQueue que puede usar cualquier API de Mercado Libre

Feed externos para integradores

Existe un solo topico publico de orders para todo MeLi.

Se notifican cambios en el JSON del GET a orders

No se notifican ordenes de mas de 12 meses.

Topico de orders
cbead41f2a5849b5a5be64df0f3521d2-orders-orders

Se notifican cambios en el JSON del GET de billing info

No se notifican ordenes de mas de 24 meses.

Topico de Billing info
orders-billing_info.orders-api

Se notifican cambios en el JSON del GET de product

No se notifican ordenes de mas de 24 meses.

Topico de Product
orders-product.orders-api

Topico de Discounts
discounts-applied-by-order.purchases-api

Para la gente externa existen feeds externos al cual deben subscribirse

No se notificaran ordenes de mas de 6 meses.

Feed externos
A traves de un servicio de Fury/Arquitectura desde orders mantenemos los siguientes feeds:

orders_v2: publica todas las novedades de ordenes visibles para el vendedor

ordersbuyer: publica todas las novedades de ordenes para el comprador


Busqueda
Actualmente solo se guardan ordenes creadas hasta 12 meses. Tampoco estan las ordenes canceladas por el comprador

Busqueda por parametros

/orders/search?buyer|seller=buyer_id&caller.id=buyer_id|seller_id&client.id=app_id

Busqueda por json

/internal/orders/search

DEPRECADO
ABM de ordenes
Crear

/orders?caller.id=$buyer_id&client.id=$app_id

Editar
Se puede editar la orden como admin, buyer o seller. Y segun sea podra hacer diferentes cosas.

Admin

/orders/$order_id?caller.scopes=admin&client.id=$app_id

Buyer

/orders/$order_id?caller.id=$buyer_id&client.id=$app_id

Seller

/orders/$order_id?caller.id=$seller_id&client.id=$app_id

Cancelar
Admin

/orders/$order_id?caller.scopes=admin&client.id=$app_id&cause=$cause&restock=false/true"

Buyer

/orders/$order_id?caller.id=$buyer_id&client.id=$app_id"

Seller

/orders/$order_id?caller.id=$seller_id&client.id=$app_id&cause=$cause&restock=false/true

ABM de envios
Orders hace de proxy para crear envios para evitar problemas de novedades. Al estar en el medio permite agregar validaciones y/o complementar el json para crear el envio con datos propios de la orden.

Crear

/orders/$orderId/shipping?caller.id=$buyerId&client.id=$appId

Editar

/orders/$orderId/shipping?caller.id=$buyerId&client.id=$appId&matchShippingFormat=true

Cancelar

/orders/$orderId/shipping?caller.id=$buyerId&client.id=$appId

ABM de pagos
Orders hace de proxy para crear pagos para evitar problemas de novedades. Al estar en el medio permite agregar validaciones y complementar el json para crear el pago con datos propios de la orden.

Medios de pagos disponibles
Antes de crear un pago hay que ver los medios disponibles de pago con este recurso de Payments


/users/$buyer_id/accepted_payment_methods

Crear

/orders/$order_id/payments?caller.id=$buyer_id&client.id=$app_id

Cancelar

/orders/$order_id/payments?client.id=$app_id&caller.id=$buyer_id

Devolver (o refunds)

/orders/$id/payments/refund?client.id=$app_id

Devolver parcialmente

/orders/$id/payments/refund/partial?client.id=$app_id

Capturar

/orders/$order_id/payments/capture?client.id=$app_id

ABM de pickups
Pickup in Store (PUIS) es cuando el comprador elige un local del vendedor para ir a retirar la compra. Aqui tambien orders hace de proxy.

Crear

/orders/$order_id/pickup?caller.id=$buyer_id&client.id=$app_id

Editar

/orders/$order_id/pickup?caller.id=$buyer_id&client.id=$app_id

Cancelar

/orders/$order_id/payments?client.id=$app_id&caller.id=$buyer_id

ABM de tags
En las ordenes hay dos conjuntos de tags.

Externos
En el json se denominan tags y los pueden ver todos. Solo el seller o un admin pueden usar estos recursos. No se pueden agregar mas de 10 tags, el mismo no puede tener mas de 50 caracteres y estan prohibidos los tags:

not_delivered

not_paid

pack_order: orden de carrito

high_concurrency: orden de item de alta concurrencia (por ejemplo los livestreaming)

reservation: orden de reserva

contract: orden de un contrato de servicio

supermarket: orden de supermercado

3x_campaign: orden que pertenece a la campaña 3x celulares

subscription: orden de una suscripcion

mshops: orden creada por canal mshops

proximity: orden creada por canal de marketplace de proximidad

mp-channel: orden creada por canal de mp-channel

automatic_variation: la orden que designo una variacion automaticamente

test_order: orden de test (ambas partes deben ser usuarios de test)

catalog: orden creada por un item listado por catalogo (aka PDP)

unfulfilled: orden que no esta concretada

Agregar Tags

/orders/$order_id/tags/$my_tag?caller.id=$seller_id&client.id=$app_id

Borrar Tags

/orders/$order_id/tags/$my_tag?caller.id=$seller_id&client.id=$app_id

Recuperar los tags

/orders/$order_id/tags?caller.id=$seller_id&client.id=$app_id

Internos
En el json se denominan internal_tags y solo se puede ver en el get a /internal/orders/$id.

Solo los clientes habilitados pueden agregar/quitar tags.

Agregar tags

/internal/orders/$order_id/tags/$my_tag?client.id=$app_id

Borrar tags

/internal/orders/$order_id/tags/$my_tag?client.id=$app_id

Lista de tags internos posibles
auto_purchase

ads

fraud_money_control

fraud-no-cash-advance

paused

not_prepaid

shipment_cost_refunded

fee_bonused

meli_warranty

invoice_authorized

invoice_canceled

invoice_forbidden

invoice_needs_review

invoice_disabled

return_opened

return_closed

return_cancelled

return_on_going

kyc_required

without_bpp

Tag Paused
Este ademas de ser informativo en la orden el mismo bloqueara cualquier accion que pueda hacer el comprador, y cancelara cualquier pago creado por MP cuando se procese la novedad del mismo.

Billing info
Billing info es un bloque de la orden con datos que sirve para la facturacion de la misma.

Es responsabilidad de los clientes de la API completar dicha informacion. La API no recupera datos de otras API's para complementar la data disponible

Editar
Es interno, se maneja desde checkout actualmente para sumar informacion de facturacion a la orden.


/orders/$order_id?caller.id=$buyer_id&client.id=$app_id

Datos almacenados
Es importante notar que estos datos son los recomendados por los clientes de Orders, pero en ningun caso desde la API los validamos o chequeamos la consistencia de los mismos.

Solo va a haber info de MLA y MLB. Los otros sitios si bien estan soportados, no tenemos documentacion sobre los tipos de datos que se reciben.

MLB Persona fisica
FIRST_NAME: el/los nombre del comprador

LAST_NAME: el apellido del comprador

DOC_TYPE: el tipo de documento

DOC_NUMBER: el numero de documento

ZIP_CODE: el codigo postal del comprador

STREET_NAME: el nombre de la calle del domicilio de facturacion del comprador

STREET_NUMBER: la altura de la calle del domicilio de facturacion del comprador

Posibles valores: cualquier string, "SN" para casos de calle sin numero

COMMENT: comentario extra sobre el domicilio de facturacion del comprador

STATE_NAME: estado del domicilio de facturacion del comprador

CITY_NAME: ciudad del domicilio de facturacion del comprador

MLB Persona juridica
BUSINESS_NAME: Nombre de la entidad juridica que compra

TAXPAYER_TYPE_ID: posicion de la entidad juridica ante el iva

Posibles valores: "Contribuinte" o "Não contribuinte"

STATE_REGISTRATION: 

DOC_TYPE: el tipo de documento

DOC_NUMBER: el numero de documento

ZIP_CODE: el codigo postal del comprador

STREET_NAME: el nombre de la calle del domicilio de facturacion del comprador

STREET_NUMBER: la altura de la calle del domicilio de facturacion del comprador

Posibles valores: cualquier string, "SN" para casos de calle sin numero

COMMENT: comentario extra sobre el domicilio de facturacion del comprador

STATE_NAME: estado del domicilio de facturacion del comprador

CITY_NAME: ciudad del domicilio de facturacion del comprador

MLA Persona fisica
FIRST_NAME: el/los nombre del comprador

LAST_NAME: el apellido del comprador

DOC_TYPE: el tipo de documento

DOC_NUMBER: el numero de documento

ZIP_CODE: el codigo postal del comprador

STREET_NAME: el nombre de la calle del domicilio de facturacion del comprador

STREET_NUMBER: la altura de la calle del domicilio de facturacion del comprador

Posibles valores: cualquier string, "SN" para casos de calle sin numero

COMMENT: piso del domicilio de facturacion del comprador

STATE_NAME: estado del domicilio de facturacion del comprador

CITY_NAME: ciudad del domicilio de facturacion del comprador

MLA Persona juridica
BUSINESS_NAME: Nombre de la entidad juridica que compra

TAXPAYER_TYPE_ID: posicion de la entidad juridica ante el iva

Posibles valores: "Monotributo", "IVA Responsable Inscripto" o "IVA Exento"

STATE_REGISTRATION: 

DOC_TYPE: el tipo de documento

DOC_NUMBER: el numero de documento

ZIP_CODE: el codigo postal del comprador

STREET_NAME: el nombre de la calle del domicilio de facturacion del comprador

STREET_NUMBER: la altura de la calle del domicilio de facturacion del comprador

Posibles valores: cualquier string, "SN" para casos de calle sin numero

COMMENT: piso del domicilio de facturacion del comprador

STATE_NAME: estado del domicilio de facturacion del comprador

CITY_NAME: ciudad del domicilio de facturacion del comprador

DOC_TYPE's
MLA

DNI

CUIT

MLB

CPF

CNPJ

MLC

RUT

MCO

CC

CE

NIT

MLV

CI

RIF

Pasaporte

MLU

CI

RUT

MPE

DNI

CE

Product info
Detalles adicionales sobre la instancia de producto vendido de la orden.

Para todos los requests presentados a continuacion el caller.id debe ser el del comprador o vendedor, y recibir un clientId. Si se necesitan usar los recursos de edicion antes se debe dar de alta en una whitelist (enviar solicitud mediante el canal de soporte).

Leer

GET /orders/$id/product?caller.id=$buyer_id&client.id=$app_id



Crear

/orders/$id/product/attributes?caller.id=$buyer_id&client.id=$app_id

Editar

/orders/$id/product/attributes/$attribute?caller.id=$buyer_id&client.id=$app_id

Borrar

/orders/$id/product/attributes/$attribute?caller.id=$buyer_id&client.id=$app_id

Links utiles
Runbook de Orders.

Metricas de Orders.

Interaccion con Payments.

Pagos.

Cupones.

Mercado Coins (Meli Coins, MCoins).

Testing
Scopes de tests
https://api.mercadolibre.com/orders/$id?caller.id=$caller_id&client.id=$app_id&scope=test3

Usar entornos de tests de otras API's
/beta/payments/

¿Que es Pack?
Representa una caja de una compra de carrito, puede tener una o varias ordenes del mismo o de distintos vendedores.

El pack siempre pertenece a un purchase y siempre tiene un envio asociado (si fue correctamente populado).

Esta entidad existe para poder crear un solo envio para varias ordenes.

Las ordenes asociadas a un pack no tienen un costo de envio discriminado.

Informacion adicional
Participa principalmente en el flujo de venta y post-venta de carrito trabajando muy de cerca con el equipo de Checkout y MyML.

¿Cuales son los estados del pack?
Los estados el pack reflejan el nivel de populado del mismo para saber cuando esta listo para que se envie.


¿Cuales son los flujos batch de populado?

¿Cuales son los flujos batch de liberacion?

¿Que pasa si hay un error al popular los packs?

¿Cuales son los flujos de devolucion?

¿Como se cancelan los packs?
Como explica la presentacion anterior cuando se devuelve un pago de alguna orden de un pack analiza el estado del envio, si aun no se despacho o la orden no tiene una mediacion,  se dispara la cancelacion del resto de la ordenes, caso contrario no se cancela el resto de las ordenes pero siempre se devuelve el costo total del envio.

Con lo cual no se puede cancelar directamente un pack, hay que buscar todas las ordenes que tiene y devolver sus pagos.

O cuando el comprador cancela el purchase antes de pagarla.

¿Cuales son las causas de cancelacion posibles?
buyer: el comprador lo hace via MyMl porque se arrepintio de la compra.

expired: el purchase se auto cancelo porque pasaron mas de 20 dias sin que lo paguen.

creation_error: hubo algun problema al popular el pack.

seller: todas las ordenes dejaron de estar pagas (todos los pagos fueron devueltos)

shipping: el envio no pudo ser entregado.

splitted: el pack se dividio en N packs

ratio_exceeded: gran parte de las ordenes del packs de cancelaron con lo cual ya no es viable el resto del mismo.

¿Se puede agregar un item a un pack creado?
No se puede agregar un nueva orden a un pack existente. 

Pero si puede pasar que un pack se divida en varios si solo si tiene varias ordenes. A los packs nuevos se le mudan las ordenes indicadas del pack original

Esto se permite porque a veces quedan chicas las cajas o se manejan items fragiles. 

¿Como es la relacion con las otras entidades?

Split
¿Que es?

En el caso de necesitar mas detalles, te sugerimos:

Charla que se encuentra en el siguiente Link!

Revisar el documento con el detalle tecnico: link.

¿Puedo hacer un split N veces al mismo pack?
No! Una vez que se confirma que se ha realizado el Split de Pack correctamente en N hijos, no se puede volver a hacer Split sobre el mismo Pack, ya que procedimos con su cancelacion.

Cancelaciones Parciales
Es la cancelacion de una orden que no necesariamente implica la cancelacion de todo el pack.

Reembolsos Parciales
Sucede cuando una orden se puede entregar pero no por su totalidad (por faltante de stock, diferencia en el pesaje, etc.). Mas informacion aca.

¿Que devolvemos?
Previo a la aparicion de Cancelaciones Parciales, todo Pack que tenia problemas con al menos un item o una Order, se cancelaba COMPLETO.

Esta situacion generaba mucha friccion en los flujos de compras de Supermercado y Full, donde una compra con muchos items, en muchos casos tendria alguna faltante y no por ello querriamos dejar de entregar el resto de los productos al comprador.


El objetivo de Cancelaciones Parciales es reducir dichas fricciones,  teniendo siempre presentes las siguientes premisas: 

Recuperar lo maximo posible sin que el comprador ponga plata.

Contarle al comprador que se devolvio de forma clara.

Que Meli no pierda mucho en financiar los costos extra de envios.

item u orden completa

¿Que paso? - El producto solicitado no tiene stock, fue pausado, esta dañado u otro motivo. 

¿Que hacemos? - Quitar el item|orden del pack para poder despachar


item u orden parcial

¿Que paso? - No hay stock suficiente del producto solicitado o alguno de ellos esta dañado.

¿Que haremos? - Dependiendo del escenario se creara una orden por menos unidades.


Diferencias en productos pesables

¿Que paso? - Un producto pesable que se cobro por X peso pero la cantidad real enviada es menor.

¿Que haremos? - Si se pesa de mas, no se cobrara extra.  De lo contrario, si se pesa de menos, se devolvera la diferencia de plata sin cancelar la orden.

¿Cuando realizamos una cancelacion parcial?
Al crear la orden

Durante el proceso de populado Purchases esta creando las ordenes para todos los items del Pack, pero alguno de esos Items no puede crear su order, por falta de stock o estar pausado, entre otros.

Este error aplica tanto para el caso de uso de item completo o item parcial.

En este punto no tenemos ordenes ni envios.


Al pagar la orden

Las ordenes del pack ya fueron creadas pero al recibir la plata se cancelo porque no cumplio ciertas validaciones

Este momento aplica para el caso de uso de orden completa o orden parcial

En este punto ya existen todas las ordenes y su envio.


Al empaquetar el envio

El pack ya esta en el estado released, con lo cual queda todo en manos del seller o shipping. Cuando se esta preparando fisicamente el paquete, buscando los productos, alguno de ellos falta, tiene un problema o pesa menos de lo cobrado.

Este momento aplica para el caso de uso de orden completa o parcial de una orden.

¿Que transiciones entre estados sufrira un Pack?
Ante cualquiera de los escenarios antes mencionados, el estado del Pack transicionara a un estado de ERROR, que sera un estado intermedio donde se realizara el recupero del mismo.

De alli podra:

Recuperarse exitosamente -> Transicionando a FILLING

No recuperarse -> Transicionando a PENDING_CANCEL

¿Cuales son las Estrategias de Recuperacion?
Al momento de la creacion de una Purchase, se debera determinar cual sera la estrategia de recuperacion que tendran sus Packs.

Estas estrategias de recuperacion,  seran 2 en un principio:

NONE -> Ante un error se cancela todo el pack.

"packing_strategy": "release_all_recover_none"


RATIO -> Ante un error se evalua si debe recuperar o no. Esta nueva estrategia sera la encargada de intentar recuperar los Packs.

"packing_strategy": "release_all_recover_ratio"


¿Como se determina la Estrategia de Recuperacion?
Si el cliente, al momento de crear la purchase, envia en el json el atributo packing_strategy. 

Si la purchase es de proximity marketplace la estrategia sera release_all_recover_none. Estas compras no son compatibles con cancelaciones parciales.

Si la purchase es de MLA y alguno de los vendedores es MELI (PL o 1P) la estrategia sera release_all_recover_none.

Si la purchase tiene como destino una agencia (destination.address_id == null) la estrategia sera release_all_recover_none.

Si la purchase es de MLA, MLB o MLM la estrategia sera release_all_recover_ratio.

Si no se cumplen las condiciones anteriores la estrategia sera release_all_recover_none.

¿Como se determina el Ratio de Recupero?
Al momento de intentar recuperar el Pack, si su estrategia de recuperacion es por RATIO, tomaremos las siguientes medidas:

X: Calcularemos el costo de todos aquellos items que no se han podido crear.

Y: Calcularemos el costo de todas aquellas ordenes del Pack que se han cancelado.

Z: Calcularemos el costo de todos los items / ordenes exitosas del Pack.


En base a estos 3 valores, realizaremos el siguiente calculo:

Ratio = (X + Y) Items u ordenes Conflictivas

        (X + Y + Z) Total de items 


Por ultimo, verificaremos si el Ratio resultante supera el limite definido, que en un principio se definio en un 20%.

Es decir, si Ratio > 0.2 -> Cancelamos TODO el Pack por CREATION_ERROR.


Este Ratio es configurable por site y dentro del site por tipo de carrito (super o gm) por lo que  se puede configurar Ratios distintos entre estas divisiones. 

¿Que es un Trash Pack?
Cada pack que se pueda rescatar tendra un unico ‘trash pack’ asociado.

Un trash-pack es un pack al cual se va a dejar ahi todo lo que tuvo problemas, tal cual un tacho de basura.


Sus caracteristicas:

Contendra todos los items que no se pudieron crear.

Contendra todas las ordenes que no se pudieron pagar, o que habiendo sido pagadas, fueron canceladas por algun motivo.

Contendra el primer envio a cancelar si ocurrio un error recuperable post creacion del envio.

Contendra el snapshot_id y option_hash del envio original en su configuracion.

Nace en status pending_cancel. Transicionara a cancelled cuando el nuevo envio (shipping asociado al pack padre) este despachado, entregado o cancelado.

Su status_detail es partially_cancelled. 

Sera hijo unico. Es decir, un pack puede tener un unico Trash Pack.

¿Como funciona internamente el recupero de un Packs?

Lecturas
Pack

/packs/pack_id?caller.id=caller.id&client.id=client.id

Orden como un pack
Se puede usar el recurso para leer packs con id de ordenes siempre y cuando la misma no pertenezca a un pack

Los datos se ajustaran lo mejor posible a cada uno. Mas informacion en este documento.

Config de un pack

/pack/pack/config?caller.id=caller&client.id=client

Familia de un pack

/pack/pack/family?caller.id=caller.id&client.id=client.id

Estados de respuesta
403 - forbidden - Callers que no esten autorizados a la lectura del pack.

403 - not_identified_application - Api-calls sin client.id como query param.

403 - not_identified_user - Api-calls sin caller.id como query param o caller.id con valor null.

404 - not_found - Api-calls sin pack id en URL o pack id incorrecto.

404 - pack_not_found - Pack inexistente.

404 - pack_without_family - Si consultamos por un family pack el cual no posee.

Novedades
Topico
cbead41f2a5849b5a5be64df0f3521d2-orders-packs

Buscar
Busqueda por Query String (DEPRECADO)

/purchases/search/[recent|archived]?seller=seller_id&caller.id=seller_id&client.id=app_id

Busqueda via JSON

/users/$seller_id/packs?client.id=$app_id&caller.id=seller_id&cbt=true/false

Custom filters

/internal/packs/$pack_id/custom_filters?caller.id=$seller_id&client.id=$app_id 'has_unread_messages':true,'other_filter":false

Cancelaciones y Reembolsos parciales
Picking

/packs/$id/orders/picking

Simulacion de picking

/packs/$id/orders/picking/simulate

Split
Distribucion a pack Hijo

/packs/$id/split?caller.id=caller.id&client.id=client.id


/shipments/shipmentId/split

Modo de despacho de un pack
Un pack puede tener distintos tipos de despachos. Lo normal es un despacho con envio, pero empezamos a dar soporte a packs sin envios. Un caso ejemplo es en el que la compra esta compuesta de items intangibles (por ejemplo comprar varias licencias de software), en dicho caso no hay nada para enviar por correo. 

El modo de despacho de un pack esta indicado dentro del nodo dispatch, el cual se puede observar en haciendo GET al pack.

Si el pack tiene envio su "mode" sera "shipping", si no tiene envio sera "none". Si el modo de despacho es "shipping", el "id" sera el id del envio.

Links utiles
Runbook Purchases.

Dashboard de compras.

Guia Split de Orden.

Pack split.

Cancelaciones parciales.

Pagos.

Testing
Scopes de tests
https://api.mercadolibre.com/packs/$id?caller.id=$caller_id&client.id=$app_id&scope=test3

Usar entornos de tests de otras API's
/beta/payments/

¿Que es Pickup?
Es una entidad que nace cuando un comprador decide retirar un producto en una sucursal y se crea utilizando informacion de la orden y de la sucursal asociada.

Gracias a esta API se puede conocer a partir de que fecha un producto estara disponible para el retiro, en que sucursal estara disponible y quien retirara el mismo.

Informacion adicional
Esta aplicacion esta presente en los flujos de venta y post-venta, principalmente en los equipos de CHO y MyML. A continuacion presentamos un documento de bajo nivel acerca del funcionamiento interno de la misma.

Links:

Github: https://github.com/mercadolibre/fury_pickups-api

Fury: https://web.furycloud.io/pickups-api

Datadog: https://app.datadoghq.com/dashboard/25s-wwa-k96?from_ts=1669381276637&to_ts=1669384876637&live=true

¿Cualquier vendedor puede utilizar la funcion de retiro en sucursal?
Deben dar de alta una store para poder usar la funcionalidad.

¿Cualquier item puede ser marcado como disponible para retiro en sucursal?
Si, la unica restriccion es que el item debe estar asociado a la sucursal.

¿Cuales son los estados de un pickup?
ACTIVE: Es el status inicial del pickup. 

READY FOR PICKUP: Se presenta cuando se cumple el plazo definido en el campo availability_time_in_hours.

DELIVERED: Se presenta cuando el vendedor indica que ya entrego el pedido pero el comprador todavia no confirmo.

FINISHED: Se presenta cuando ambas partes confirman que el pedido fue entregado.

¿Es posible modificar la fecha de retiro en sucursal?
Si es posible, la misma se puede adelantar o atrasar.

¿Que sucede si la orden relacionada al pickup se cancela?
El pickup pasara a estado INACTIVE y una vez alcanzada la fecha pactada de retiro el mismo no pasara al estado READY_FOR_PICKUP.

¿Es posible eliminar un pickup?
Si, esto cambiara el estado del mismo a INACTIVE.

¿Tiene un cargo adicional asignar pickup a orden?
No.

¿Un pickup puede tener asociadas varias ordenes?
La API aun no preparada para tolerarlo, ni tampoco se puede asociar a un pack.

Por el momento solo se puede asignar una orden a un pickup.

¿Como se configura un pickup?
En primer lugar, para la configuracion de un pickup deben estar dados de alta previamente tanto la store como el (los) item(s). 

Una vez hecho esto, el siguiente paso es asociar un item a una store (todo el uso de stores y relaciones con items esta habilitado solo para un grupo de sellers whitelisteados).

Finalmente, con el item asociado se crea el pickup.

Lectura

/pickups/pickup_id?access_token=access_token

ABM de pickup
Crear

/internal/pickups?client.id=client

Modificar (para externos)

/pickups/pickup_id?caller.id=caller_id&client.id=client

Modificar (para internos)

/internal/pickups/pickup_id?client.id=client

Eliminar

/internal/pickups/pickup_id?client.id=client

Novedades
Topico
pickup.stores-api

¿Que es una purchase?
Una purchase es una representacion de una compra de carrito, es un abstraccion superior de las ordenes de compra.

Imaginen que tienen un carrito del super con varias bolsas con productos. El carrito es la compra (purchase), cada bolsa seria un paquete (pack) y cada producto es un item comprado (order).

Los vendedores de un purchase no tienen acceso al purchase sino solamente a las porciones de sus packs dentro del purchase (un pack puede tener muchos vendedores)

Informacion adicional
Los principales equipos con los que interactuamos en el manejo de los Purchases son Checkout, Carts Frontend, MyML, Splitter y Payments.

¿Cuales son los estados de purchases?

¿Cuales son los flujos online?

¿Cuales son los flujos batch de populado?

¿Cuales son los flujos batch de liberacion?

¿Que pasa si hay un error al popular los packs del purchase?

¿Cuales son los flujos de devolucion?

¿Cual es la maxima cantidad de packs que puede tener un purchase?
El numero maximo de Packs en un Purchase es 50. Cada pack, puede tener 1 o mas ordenes.

¿Cuantos dias tengo para pagar un purchase?
Un purchase debe ser pagado (transicionar a estado paid) dentro de los 20 dias posteriores a su creacion, de lo contrario se cancela por expiracion.

¿Los vendedores tienen acceso al purchase?
No, purchase es la vista de una compra de carrito para el comprador. Los vendedores que forman parte de un purchase tienen acceso solamente a su packs, y no a la totalidad de los mismos sino a una vista parcial de sus ordenes dentro del pack (dado que el mismo pack puede estar compartido entre diferentes vendedores).

¿Como se cancelan los purchases?
Para que un purchase se cancele, primero tienen que cancelarse todos sus packs. No existen purchases cancelados con packs NO cancelados,  asi como no se cancela un pack hasta no se cancelan todas sus ordenes. 

¿Cuales son las causa de cancelacion posibles?
buyer: el comprador cancela via MyML. 

expired: el purchase se auto cancelo porque pasaron mas de 20 dias sin que lo paguen.

creation_error: hubo algun problema al popular el pack.

seller: todas las ordenes dejaron de estar pagas (todos los pagos fueron devueltos).

shipping: el envio no pudo ser entregado.

mix: los packs del purchase fueron cancelados por diferentes motivos y, por lo tanto, el motivo de cancelacion del purchase NO es unico.

¿Como es la relacion con las otras entidades?

¿Cual es la tabla de Teradata?
En Teradata se encuentran las siguientes tablas relacionadas a la entidad Purchases/Packs:

WHOWNER.BT_CRT_PURCHASES

WHOWNER.BT_CRT_PACKS

WHOWNER.BT_CRT_PURCHASES_PACKS_ITEMS

Lecturas
Obtener Purchase

/purchases/purchase?caller.id=caller&client.id=client

Obtener Billing Info

/purchases/purchase/billing_info?caller.id=caller&client.id=client

Obtener Pagos

/purchases/purchase/payments?caller.id=caller&client.id=client

Novedades
Topico
cbead41f2a5849b5a5be64df0f3521d2-orders-purchases

Busquedas
Buscar Purchases

/purchases/search?buyer=buyer_id&caller.id=caller&client.id=client

Buscar Purchases via JSON

https://internal-api.mercadolibre.com/users/$buyer_id/purchases?caller.id=buyer_id&client.id=app_id

ABM Purchase
Crear

/purchases?caller.id=caller&client.id=client

Editar

/purchases/purchase?caller.id=caller&client.id=client

Cancelar

/purchases/purchase?caller.id=caller&client.id=client

ABM Pagos
Purchases hace de proxy del splitter para manipular sus pagos.

Crear

/purchases/purchase/payments?caller.id=caller&client.id=client

Cancelar todos los pagos

/purchases/purchase/payments/return?caller.id=caller&client.id=client

ABM Tags
Crear

/purchases/purchase/tags/tag

Eliminar

/purchases/purchase/tags/tag

Links utiles
Runbook Purchases.

Dashboard de compras

Guia Split de Orden.

Pack split.

Cancelaciones parciales.

Pagos.

Cupones.

Mercado Coins (Meli Coins, MCoins).

Testing
Scopes de tests
https://api.mercadolibre.com/purchases/$id?caller.id=$caller_id&client.id=$app_id&scope=test3

Usar entornos de tests de otras API's

/beta/payments/

¿Que es reserva de items?
Es la api encargada de garantizar durante el proceso de compra el correcto otorgamiento de la unidad comprada reservandola con anterioridad, de esta forma se evita que las compras procesadas como B=P puedan ser canceladas al momento del pago por falta de stock, mejorando asi la experiencia de compra para el usuario.

Dicho comportamiento es de mucha utilidad para eventos de compras masivas, ofertas, etc. Utilizando este mecanismo reemplazamos la experiencia negativa del usuario de comprar y que se cancele la misma unos segundos despues por falta de stock, por la notificacion con anticipacion de la falta de stock del producto.

Activar control 
Habilitar items sin variacion 

item/:itemId/stock

Habilitar item con variacion 

/item/:itemId/variation/:variationId/stock

Habilitar todo el stock por item

/item/:itemId/stock/all

Habilitar item ignorando las variaciones

/item/:itemId/stock/ignore-variations

Desactivar control 
Stock de item

/item/:itemId/stock

Stock de item con variacion

/item/:itemId/variation/:variationId/stock

Novedades
items-stock-api.items-stock-kvs-stream
